1. Vector3.Lerp(Vector3 a, Vector3 b, float t
  -설명
    이 메서드는 두 벡터 사이를 선형보간(Linear Interpolation)하는 기능을 제공한다.
    어떠한 오브젝트를 부드럽게 이동시키거나, 어떤 값들이 시간에 따라 점진적으로 변화하도록 할 때 사용된다.
  -기본 원리
    Lerp(a, b, t)는 다음과 같은 수학적 공식을 가진다.
    Lerp(a, b, t) = a + (b - a) x t (t는 0과 1사이에 보간계수)
  -Vector3.MoveTowards와의 차이
    Lerp는 지금위치가 전체 구간에서 어느 정도의 위치하는 정도에 따라 위치를 구한다.
    MoveTowards는 이번 프레임에 얼마만큼 가까워지는 정도이다.
    따라서
      시간 구간에 따라 정확한 퍼센트(%/보간)를 제어하고 싶으면 Lerp
      이 속도로 움직여서 목표에 도달하고 싶다라는 단순 이동이면 MoveTowards
    사용하면 된다.

2. Input System
  - 설명
    유니티의 Input System은 게임 내 다양한 입력(키보드, 마우스, 게임패드, 터치, 모바일 자이로, VR 컨트롤러 등)을 통합적으로 처리하고 쉽게 확장할 수 있도록 만들어진 새로운 입력 처리 방식이다. 
    기존 Input.GetAxis(), Input.GetKeyDown() 같은 방식을 대체하고, 보다 유연하고 강력한 기능을 제공한다.
  - 주요특징
    1. 장치 추상화
      다양한 입력장치를 하나의 인터페이스로 다룰 수 있다.
    2. Action 기반 구조
      기존은 키코드 위주로 입력 처리했지만, Input System은 액션을 정의하고, 입력 매핑을 설정한다.
    3. 런타임 리바인딩 가능
      런타임중 플레이어가 키나 버튼을 직접 재설정 할 수 있다.
    4. 이벤트 기반 처리
      입력의 변화를 이벤트 기반으로 콜백 받을 수 있다.
    5. 직관적인 에디터 UI
      전용 Input Action 에셋을 통해 액션과 바인딩을 시각적으로 구성, 관리 할 수 있다. 
